# --------------------------------------------------------------------------------------------------
# locale
# --------------------------------------------------------------------------------------------------
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# --------------------------------------------------------------------------------------------------
# local
# --------------------------------------------------------------------------------------------------
[[ -f ~/.zshrc.local.zsh ]] && source ~/.zshrc.local.zsh

# --------------------------------------------------------------------------------------------------
# homebrew
# --------------------------------------------------------------------------------------------------
if (( ! $+commands[brew] )); then
  [[ -x /opt/homebrew/bin/brew ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
fi

if (( $+commands[brew] )); then
  export HOMEBREW_PREFIX="$(brew --prefix)"
  export HOMEBREW_AUTO_UPDATE_SECS=86400
fi

if [[ -d "$HOMEBREW_PREFIX/share/zsh/site-functions" ]]; then
  fpath+=("$HOMEBREW_PREFIX/share/zsh/site-functions")
fi

# --------------------------------------------------------------------------------------------------
# prompt
# --------------------------------------------------------------------------------------------------
PURE_GIT_PULL=0

zstyle :prompt:pure:git:stash show yes

# --------------------------------------------------------------------------------------------------
# zimfw
# --------------------------------------------------------------------------------------------------
ZIM_HOME=~/.zim

zstyle ':zim:zmodule' use 'degit'

if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi

source ${ZIM_HOME}/init.zsh

# --------------------------------------------------------------------------------------------------
# input/output
# --------------------------------------------------------------------------------------------------
setopt INTERACTIVE_COMMENTS
setopt NO_CLOBBER

# --------------------------------------------------------------------------------------------------
# jobs
# --------------------------------------------------------------------------------------------------
setopt LONG_LIST_JOBS
setopt NO_BG_NICE
setopt NO_CHECK_JOBS
setopt NO_HUP

# --------------------------------------------------------------------------------------------------
# ls
# --------------------------------------------------------------------------------------------------
if whence dircolors >/dev/null && ls --version &>/dev/null; then
  # GNU
  export LS_COLORS='di=1;34:ln=35:so=32:pi=33:ex=31:bd=1;36:cd=1;33:su=30;41:sg=30;46:tw=30;42:ow=30;43'
  alias ls='ls --group-directories-first --color=auto'
else
  # BSD
  export CLICOLOR=1
  export LSCOLORS=ExfxcxdxbxGxDxabagacad
fi

alias l='ls -CF'
alias ll='ls -lh'
alias la='ls -lAh'

# --------------------------------------------------------------------------------------------------
# cd
# --------------------------------------------------------------------------------------------------
export PROJECTS="${HOME}/projects"
export ARCADIA="${HOME}/arcadia"

path+=("${ARCADIA}")
export PATH

setopt AUTO_PUSHD

autoload -Uz is-at-least && if is-at-least 5.8; then
  setopt CD_SILENT
fi

setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT
setopt PUSHD_TO_HOME
setopt PUSHDMINUS

alias ..='cd ..'
alias ...='cd ../..'
alias -- -='cd -'
alias 1='cd -1'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'
alias d='dirs -v | head -n 10'
alias cdr='cd $(git rev-parse --show-toplevel)'

# --------------------------------------------------------------------------------------------------
# zoxide
# --------------------------------------------------------------------------------------------------
if (( $+commands[zoxide] )); then
  eval "$(zoxide init zsh)"
fi

# --------------------------------------------------------------------------------------------------
# history
# --------------------------------------------------------------------------------------------------
HISTSIZE=20000
SAVEHIST=10000

setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
setopt SHARE_HISTORY

alias h='fc -il'

# --------------------------------------------------------------------------------------------------
# editor
# --------------------------------------------------------------------------------------------------
if (( ! $+commands[code] )); then
  export EDITOR='code --wait'
else
  export EDITOR=nano
fi

export GIT_EDITOR="${EDITOR}"

# --------------------------------------------------------------------------------------------------
# less
# --------------------------------------------------------------------------------------------------
export PAGER=less
export LESS="FRSXj2x2"

export LESS_TERMCAP_mb=$'\E[1;31m'  # Begins blinking.
export LESS_TERMCAP_md=$'\E[1;31m'  # Begins bold.
export LESS_TERMCAP_me=$'\E[0m'     # Ends mode.
export LESS_TERMCAP_ue=$'\E[0m'     # Ends underline.
export LESS_TERMCAP_us=$'\E[1;32m'  # Begins underline.

# --------------------------------------------------------------------------------------------------
# grep
# --------------------------------------------------------------------------------------------------
export GREP_COLOR='37;45'              #BSD
export GREP_COLORS="mt=${GREP_COLOR}"  #GNU

alias grep='grep --color=auto'
alias egrep='grep -E --color=auto'
alias fgrep='grep -F --color=auto'

# --------------------------------------------------------------------------------------------------
# bat
# --------------------------------------------------------------------------------------------------
if (( $+commands[bat] )); then
  export BAT_THEME='GitHubDark'
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
fi

# --------------------------------------------------------------------------------------------------
# fzf
# --------------------------------------------------------------------------------------------------
if (( $+commands[fzf] )); then
  export FZF_DEFAULT_OPTS="--cycle --layout=reverse --border --height=50%"

  if (( $+commands[fd] )); then
    export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --exclude .git --exclude node_modules'
    export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
    export FZF_ALT_C_COMMAND='fd --type d --strip-cwd-prefix --hidden --exclude .git --exclude node_modules'

    _fzf_compgen_path() {
      fd --type f --type d --hidden --exclude .git --exclude node_modules . ${1}
    }

    _fzf_compgen_dir() {
      fd --type d --hidden --exclude .git --exclude node_modules  . ${1}
    }
  fi

  if (( $+commands[bat] )); then
    export FZF_CTRL_T_OPTS="--bind ctrl-/:toggle-preview --preview 'bat -pp --color=always --line-range :500 {}'"
  fi

  if (( $+commands[tree] )); then
    export FZF_ALT_C_OPTS="--bind ctrl-/:toggle-preview --preview 'tree -C -L 2 --dirsfirst --gitignore {}'"
  fi

  source <(fzf --zsh)
fi

# --------------------------------------------------------------------------------------------------
# fnm
# --------------------------------------------------------------------------------------------------
if (( $+commands[fnm] )); then
  eval "$(fnm env --use-on-cd)"
fi

# --------------------------------------------------------------------------------------------------
# iterm2
# --------------------------------------------------------------------------------------------------
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# --------------------------------------------------------------------------------------------------
# aliases
# --------------------------------------------------------------------------------------------------
alias headers='http --print=Hh'
alias listening='sudo lsof -iTCP -sTCP:LISTEN -n -P'
